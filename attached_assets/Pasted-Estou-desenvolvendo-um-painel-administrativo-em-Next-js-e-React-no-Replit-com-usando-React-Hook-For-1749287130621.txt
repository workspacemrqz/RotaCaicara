Estou desenvolvendo um painel administrativo em Next.js e React no Replit.com, usando React Hook Form com Zod para validação, componentes shadcn/ui para UI e TanStack Query para mutações. Criei um wizard de três passos em pages/admin.tsx para cadastro de novos negócios, mas o botão “Adicionar Negócio” não dispara a criação: não há requisição HTTP, não aparece erro no console e o modal permanece aberto. A sequência atual é:

Estrutura do wizard

Estado currentStep controla renderização de três blocos de campos.

Navegação com botões “Anterior” e “Próximo” (type="button"), atualizando currentStep.

No terceiro passo, há campos de upload (ImageUpload), switches e o botão final.

Implementação de submissão

O <form> usa um handler customizado:

tsx
Copiar
Editar
<form onSubmit={(e) => {
  e.preventDefault();
  if (currentStep === 3) {
    businessForm.handleSubmit(handleBusinessSubmit)(e);
  }
}}>
O botão final é:

tsx
Copiar
Editar
<Button
  type="button"
  onClick={(e) => {
    e.preventDefault();
    e.stopPropagation();
    businessForm.handleSubmit(handleBusinessSubmit)();
  }}
>
  Adicionar Negócio
</Button>
A função handleBusinessSubmit(data) valida via businessForm.trigger(), chama createBusiness.mutateAsync com payload, e no onSuccess do mutation fecha modal e reseta formulário.

Problema observado

Clicar em “Adicionar Negócio” não aciona handleBusinessSubmit.

A Network Tab não registra POST /api/businesses.

Não há toast de sucesso nem erro.

O botão está definido como type="button" dentro de um form com onSubmit customizado que previne sempre o evento nativo.

Objetivo do prompt

Identificar por que o handleSubmit não dispara o handleBusinessSubmit.

Explicar como a combinação de e.preventDefault no <form> e type="button" bloqueia a submissão.

Propor mudanças precisas no JSX: alterar o type do botão, modificar o onSubmit do <form>, remover chamadas manuais de preventDefault ou stopPropagation que atrapalham o fluxo.

Garantir que, ao clicar em “Adicionar Negócio” no passo 3, o React Hook Form colete todos os dados, valide com Zod, execute a mutation createBusiness e atualize as queries.

Requisitos da solução

Fornecer o trecho de código original (sofrendo o problema) e, em seguida, o código corrigido, destacando o diff.

Manter botões de navegação (“Próximo”, “Anterior”) como type="button".

Usar businessForm.handleSubmit(handleBusinessSubmit) diretamente como handler de onSubmit no <form>.

Tornar o botão “Adicionar Negócio” do tipo submit, sem onClick manual.

Explicar cada alteração em poucas linhas, mas detalhando impacto imediato.

Apresentar resposta em português, sem markdown, pronta para copiar e colar no chat do Replit AI.

Por favor, analise esse cenário completo e me sugira o conjunto mínimo de alterações no componente pages/admin.tsx para que o botão “Adicionar Negócio” execute de fato a criação no backend, respeitando as regras de validação do Zod e disparando o toast de sucesso. Obrigado!