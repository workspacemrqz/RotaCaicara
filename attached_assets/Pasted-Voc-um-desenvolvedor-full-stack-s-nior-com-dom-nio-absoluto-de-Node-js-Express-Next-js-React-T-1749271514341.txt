Você é um desenvolvedor full-stack sênior com domínio absoluto de Node.js/Express, Next.js, React, TypeScript, React Query, React Hook Form, Zod, CSS Variables, animações em CSS puro e SVG inline. Recebeu o repositório EcoTrackSolution (o projeto “Rota Caiçara”) na íntegra—cada arquivo, cada caractere, cada import, cada comentário. Sua missão é:

1. Ler absolutamente todos os arquivos do projeto (server/index.ts, server/routes.ts, shared/schema.ts, client/src/lib/queryClient.ts, client/src/hooks/useSettings.ts, client/src/hooks/useSubmissions.ts, client/src/pages/admin.tsx, client/src/pages/admin/settings.tsx, client/src/pages/admin/submissions.tsx, client/src/pages/index.tsx, client/src/pages/categories/\[slug].tsx, client/src/components/Sidebar.tsx, Header.tsx, Footer.tsx, Button.tsx, etc.), sem pular nada, entendendo cada linha e dependência.

2. Corrigir todos os bugs pendentes, implementando as seguintes funcionalidades, sempre entregando apenas *diffs* de código (trechos antes/depois) com comentários de até duas linhas em cada mudança:

   * Backend:
     • Verificar que express.json() é chamado antes de CORS e registerRoutes.
     • Em server/routes.ts adicionar/ajustar DELETE /api/businesses/\:id que chama storage.deleteBusiness(id) e retorna 204 sem corpo; PATCH /api/businesses/\:id com validação Zod (businessUpdateSchema.parse(req.body)), logging completo e res.status(200).json(updated) em sucesso; POST /api/submissions e PATCH/DELETE/GET para /api/admin/submissions/\:id, integrando publicação de submission em business.
     • Implementar PATCH /api/settings/general, /home e /announce salvando featuredEnabled, logoUrl, tema e demais settings.

   * Frontend Administração:
     • client/src/pages/admin/submissions.tsx: cada cadastro exibe botões Ver (GET /api/admin/submissions/\:id em modal), Editar (modal com formulário validado por Zod e mutateAsync), Publicar (PATCH status=approved, invocar endpoint de publicação de business e invalidateQueries) e Excluir (DELETE + toast + invalidate).
     • client/src/pages/admin.tsx: corrige updateBusiness com useMutation(async … apiRequest(“PATCH”…)), onSuccess só fecha modal após invalidateQueries(“businesses”), onError exibe toast sem fechar modal.
     • client/src/pages/admin/settings.tsx: reorganizar em três abas (Geral, Home, Anuncie Sua Empresa), cada aba com botão “Salvar” que chama useMutation para PATCH /api/settings/\:section, zodResolver(settingsSchema), onSuccess exibe toast, invalidateQueries(“settings”) e atualiza Context.

   * Theming e logo dinâmico:
     • client/src/styles/globals.css: definir \:root { --color-primary, --color-primary-light/dark } e will-change.
     • Criar client/src/context/SettingsContext.tsx que carrega via useQuery(“settings”), persiste em localStorage e fornece logoUrl, primaryColor e featuredEnabled.
     • Em Header.tsx e Footer.tsx consumir SettingsContext para renderizar logoUrl dinâmico e cores de tema em tempo real.

   * Frontend Home:
     • client/src/pages/index.tsx: receber featuredEnabled e featuredBusinesses via getStaticProps ou useQuery, renderizar seção “Empresas em Destaque” somente se featuredEnabled for true, incluindo scroll-loop de cards com keyframes slideLoop; seção “Categorias” em pages/categories/\[slug].tsx com getStaticPaths e getStaticProps, fallback\:blocking e tratamento 404; exibir imagens com <img src={b.imageUrl}>.
     • Adicionar texto dinâmico “Explore/Descubra/Conecte” logo abaixo do título “CATEGORIAS”, maior e mais próximo, com keyframes textLoop.

   * Animações:
     • globals.css: definir keyframes gradientLoop no header, float em pseudo-elementos da seção categorias, morph em SVG logo, pulse em botões, fadeInUp em cards admin, shine em ícones sociais.
     • Substituir divs por motion.div onde for relevante, configurar initial/animate/exit e variants.

3. Para cada arquivo modificado, gere um único diff no estilo “--- a/…   +++ b/…”, mostrando o bloco original e o bloco alterado, e adicione um comentário de 1-2 linhas explicando a mudança.

4. Ao fim, apresente um checklist das validações manuais a executar em desktop e mobile:

   * Excluir, editar e listar negócios no admin e no front sem sumir ou duplicar dados.
   * Ver cadastros, editar, publicar e excluir.
   * Atualizar configurações de site e tema, toggle de featuredEnabled.
   * Carregar nova logo imediatamente em Header e Footer.
   * Ver animações em loop funcionando sem travar.

5. Não entregue nada além dos diffs, comentários e checklist; não inclua explicações genéricas nem códigos completos fora dos diffs.

Copie este prompt exatamente na interface da IA do Replit para que ela processe todo o repositório e aplique as correções e implementações de uma só vez, garantindo um resultado perfeito.
