Atue como desenvolvedor full-stack sênior (Node.js/Express no backend e React/TypeScript no frontend) e trabalhe diretamente com React Query, React Hook Form, Zod e Framer Motion. Você recebeu o repositório **EcoTrackSolution** completo. Sua tarefa é implementar, corrigir e aprimorar **tudo** abaixo, entregando **somente** os diffs (antes e depois) dos arquivos alterados, com comentários de até 2 linhas explicando cada mudança. Seja minucioso em cada etapa:

1. **Fluxo de Exclusão de Negócios**  
   - **Backend (`server/routes.ts`)**:  
     - Garanta que exista uma rota `DELETE /api/businesses/:id` após o body parser.  
     - Dentro dela, chame `await storage.deleteBusiness(id)` e responda com `res.status(204).end()`.  
     - Adicione log de sucesso e tratamento de erro (`catch`) para enviar `res.status(500).json({ error })`.  
   - **Frontend (`client/src/pages/admin.tsx`)**:  
     - No ícone de lixeira, altere o handler para usar `useMutation` com `mutationFn: () => apiRequest("DELETE", `/api/businesses/${id}`)`.  
     - Em `onSuccess`, chame `queryClient.invalidateQueries("businesses")` e exiba um toast de confirmação.  
     - Em `onError`, exiba toast de erro sem recarregar ou fechar modal.

2. **Fluxo de Atualização de Negócios**  
   - **Validação (Zod + React Hook Form)**:  
     - Em `shared/schema.ts`, revise o schema `businessSchema`, garantindo todos os campos obrigatórios.  
     - No componente de edição (`admin.tsx`), confirme que `useForm({ resolver: zodResolver(businessSchema) })` está configurado.  
   - **Mutação React Query**:  
     - Defina `const updateBusiness = useMutation(async ({ id, payload }) => await apiRequest("PATCH", `/api/businesses/${id}`, payload))`.  
     - Em `onSuccess`, chame `queryClient.invalidateQueries("businesses")`, feche o modal (`setOpen(false)`) e `reset()`.  
     - Em `onError`, mostre o `error.message` via toast, sem alterar estados.  
   - **Submit Handler**:  
     - Refatore `async function handleBusinessSubmit(data)` para primeiro chamar `await trigger()` (validação), depois `await updateBusiness.mutateAsync({ id, payload: data })`, só então `reset()` e `closeModal()`.

3. **Listagem por Categoria na Home**  
   - **Rotas Next.js**:  
     - Em `pages/categories/[slug].tsx`, ajuste `getStaticPaths` para incluir todos os slugs de categoria; use `fallback: "blocking"`.  
     - Em `getStaticProps` ou `getServerSideProps`, faça `fetch(`${process.env.API_URL}/api/categories/${slug}/businesses`)`.  
     - Se status for 404, retorne `{ notFound: true }` para renderizar página de “Categoria não encontrada” personalizada.  
   - **Hook de Dados**:  
     - Se usar `useQuery`, defina `queryKey: ["categories", slug]` e `queryFn` correspondente.  
     - Adicione tratamento de loading, erro e empty state.

4. **Configurações do Site no Admin**  
   - **Estrutura de Abas** (`client/src/pages/admin/settings.tsx`):  
     - Crie três abas:  
       1. **Geral** (título do site, logo)  
       2. **Home** (textos, banners)  
       3. **Anuncie sua Empresa** (configurações específicas)  
   - **Salvar Alterações**:  
     - Em cada aba, adicione botão “Salvar” que chama `useMutation` para `PUT /api/settings` ou `PATCH /api/settings/:section`.  
     - No backend (`server/routes.ts`), implemente essas rotas, salvando em `storage.updateSettings(section, req.body)`, retornando JSON atualizado.  
     - Exiba toast de sucesso ou erro.

5. **Remover Aba “Conteúdo”**  
   - **Sidebar** (`client/src/components/Sidebar.tsx`):  
     - Remova a importação e o `<NavLink>` da rota “Conteúdo”.  
   - **Rotas**:  
     - Exclua ou desative o arquivo `pages/admin/content.tsx`.

6. **Animações Avançadas com Framer Motion**  
   - **Seção “Anuncie sua Empresa” (frontend)**:  
     - Substitua transições CSS básicas por componentes `motion.div` com as propriedades `initial`, `animate`, `exit` e `variants`.  
     - Aplique animações em cards de planos, botões de interação e no próprio formulário de envio.

7. **Formulário de Submissão de Empresa**  
   - **Frontend (`client/src/pages/anuncie.tsx`)**:  
     - No `onSubmit`, use `await apiRequest("POST", "/api/submissions", data)` e trate resposta 201.  
     - Em sucesso, exiba modal de agradecimento; em erro, toast de falha.  
   - **Backend (`server/routes.ts`)**:  
     - Crie rota `POST /api/submissions` que faz `storage.createSubmission(req.body)` e retorna `res.status(201).json(submission)`.

8. **Gerenciamento de Cadastros no Admin**  
   - **Aba “Cadastros” (`client/src/pages/admin/submissions.tsx`)**:  
     - Use `useQuery("submissions", () => apiRequest("GET", "/api/admin/submissions"))`.  
     - Exiba lista com colunas: Empresa, Data, Status.  
     - Inclua botões **Ver**, **Editar**, **Publicar** e **Excluir** para cada linha.  
     - Submissões com `status !== "approved"` exibem badge **Pendente**.

9. **Dashboard → Cadastros Pendentes**  
   - Em `client/src/pages/admin/dashboard.tsx`, crie seção “Cadastros Pendentes” com link/botão “Ir para Cadastros” apontando para `/admin/submissions`.

10. **Remover Texto Genérico no Admin**  
    - Localize e remova a string **“Gerencie todos os aspectos da plataforma Rota Caiçara”** no arquivo de header ou sidebar.

11. **Animações Globais**  
    - Adicione animações fixas em componentes-chave (Hero, destaques, banners) usando `motion` do Framer Motion.

12. **Ajustes no Rodapé**  
    - No componente `<Footer>`, envolva os ícones sociais em `div` com background off-white (`#F5F5F5`) e defina a cor dos ícones para o azul primário do tema (`#005F71`).

13. **Logo Dinâmico**  
    - Em **Configurações**, ao enviar nova logo, armazene no backend e retorne a URL.  
    - No frontend, utilize React Context ou `useEffect` para atualizar o `src` do logo em `<Header>` e `<Footer>` dinamicamente sem recarregar a página.

14. **Reorganização de Configurações**  
    - Garanta que cada aba de settings envie apenas os campos necessários via `PATCH /api/settings/:section`.  
    - No backend, trate cada rota separadamente (ex.: `/api/settings/home`, `/api/settings/announce`).

15. **Remover Bloco de Certificação**  
    - No admin e no frontend da aba **Anuncie sua Empresa**, exclua completamente o bloco de texto sobre “CERTIFICADO DE ANUNCIANTE VERDE” e seus subitens (texto e QR Code).

**Instruções Finais:**  
- Envie **apenas** os diffs dos arquivos modificados (`server/index.ts`, `server/routes.ts`, `client/src/lib/queryClient.ts`, `client/src/pages/admin.tsx`, `client/src/pages/admin/settings.tsx`, `client/src/components/Sidebar.tsx`, `client/src/pages/categories/[slug].tsx`, etc.).  
- Inclua comentários concisos (máx. 2 linhas) em cada mudança para explicar o que foi feito.  
- Valide manualmente cada fluxo após aplicar as alterações.  
- Não inclua arquivos não modificados nem explicações extras fora dos comentários de código.
