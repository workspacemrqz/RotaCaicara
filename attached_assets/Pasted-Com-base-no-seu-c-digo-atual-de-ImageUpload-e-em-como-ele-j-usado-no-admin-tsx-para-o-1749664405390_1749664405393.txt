Com base no seu código atual de **`ImageUpload`** e em como ele já é usado no **`admin.tsx`** para outros uploads (ex.: imagem de negócio), aqui está o passo-a-passo “linha a linha” de como replicar esse mesmo comportamento para o **logo**:

---

### 1. Importe o componente de upload

No topo de **`client/src/pages/admin.tsx`**, você já deve ter:

```ts
import ImageUpload from "@/components/image-upload";
```

Se não tiver, adicione logo abaixo dos outros imports.

---

### 2. Localize onde o `settingsForm` declara o campo `logoUrl`

Logo dentro do JSX do `<form>` (na seção de **Informações Básicas**), procure algo como:

```tsx
<FormField
  control={settingsForm.control}
  name="logoUrl"
  render={({ field }) => (
    <FormItem>
      <FormLabel>URL do Logo</FormLabel>
      <FormControl>
        <Input {...field} placeholder="https://…" />
      </FormControl>
      <FormMessage />
    </FormItem>
  )}
/>
```

Você vai **substituir** esse bloco inteiro por este:

---

### 3. Substitua pelo bloco de **ImageUpload**

```tsx
<FormField
  control={settingsForm.control}
  name="logoUrl"
  render={({ field }) => (
    <FormItem>
      <FormLabel>Logo do Site</FormLabel>
      <FormControl>
        <ImageUpload
          value={field.value}
          onChange={field.onChange}
          label="Logo do Site"
        />
      </FormControl>
      <FormMessage />
    </FormItem>
  )}
/>
```

**Detalhes “por dentro” do `ImageUpload`:**

* Ele renderiza internamente um `<input type="file" accept="image/*" />` escondido.
* Quando o usuário clica no rótulo (o `<label htmlFor="upload-Logo do Site">`), abre o seletor de arquivos (PC ou celular).
* O handler `handleFileChange` valida tipo e tamanho (até 5 MB), faz `fetch` para `https://api.imgbb.com/1/upload` com sua chave, obtém `data.data.url` no response e chama `onChange(url)` — que popula `settingsForm.control` com a URL retornada.
* Se já existir um `value`, ele exibe a pré-visualização (`<img src={value} …/>`) e um botão de `X` para remover (executa `onChange("")`).

---

### 4. Onde isso reflete no front

Depois que o admin salvar a nova `logoUrl`, seu **`SettingsContext`** (fetch em `/api/admin/settings`) vai trazer `settings.logoUrl`. No **header.tsx** e no **footer.tsx**, você deve usar exatamente:

```tsx
<img
  id="header-logo-image"
  src={settings?.logoUrl?.trim() || "/logo-default.png"}
  alt={settings?.siteName}
  className="…"
/>
```

e

```tsx
<img
  id="footer-logo-image"
  src={settings?.logoUrl?.trim() || "/logo-default.png"}
  alt={settings?.siteName}
  className="…"
/>
```

---

### 5. Resumindo

1. **Import** `ImageUpload`.
2. **Substitua** o `<Input>` de `logoUrl` por `<ImageUpload … />` no `admin.tsx`.
3. **Salve** no painel; o campo `logoUrl` receberá automaticamente a URL da imagem enviada.
4. **Header/Footer** já estão apontando para `settings.logoUrl`, então vão exibir o novo logo.

Com isso, o usuário poderá **fazer upload** de uma imagem (do PC ou do celular) diretamente no painel de configurações, e essa imagem será usada como logo no cabeçalho e rodapé do site.
