**Contexto**
Eu tenho um projeto React + TypeScript hospedado no Replit que utiliza React Hook Form, React Query e Radix UI Dialog para gerenciar um modal de criação e edição de “Negócios”. O fluxo é dividido em três etapas navegáveis por um estado `currentStep`.

**Descrição do problema**
Ao editar um negócio existente, quando estou na **etapa 2** (“Contato e Localização”) e clico em **“Próximo”**, o modal se fecha imediatamente e dispara automaticamente a mutação de atualização, sem que eu clique no botão de envio final (“Atualizar Negócio”). Há um toast de sucesso e a janela se fecha, mas eu não queria salvar ainda — só queria avançar para a etapa 3.

**O que já tentei**

* Declarei explicitamente `type="button"` nos botões “Próximo” e “Anterior”.
* Confirmei em `handleBusinessSubmit` que a mutação só executa se `currentStep === 3`.
* Uso `onOpenChange` do Radix Dialog para resetar `currentStep` e o formulário ao fechar.

**Arquitetura relevante**

1. **Dialog**

   ```tsx
   <Dialog open={businessDialogOpen} onOpenChange={(open) => {
     setBusinessDialogOpen(open);
     if (!open) {
       setCurrentStep(1);
       businessForm.reset({ /* valores padrão */ });
     }
   }}>
     <DialogContent>…</DialogContent>
   </Dialog>
   ```
2. **Formulário em três etapas**

   ```tsx
   <FormProvider {...businessForm}>
     <form onSubmit={businessForm.handleSubmit(handleBusinessSubmit)}>
       {currentStep === 1 && (…) }
       {currentStep === 2 && (…) }
       {currentStep === 3 && (…) }
       <div>
         {currentStep < 3
           ? <Button type="button" onClick={() => setCurrentStep(currentStep + 1)}>Próximo</Button>
           : <Button type="submit">Atualizar Negócio</Button>
         }
       </div>
     </form>
   </FormProvider>
   ```
3. **handleBusinessSubmit**

   ```ts
   const handleBusinessSubmit = async (data) => {
     if (currentStep !== 3) return;
     const valid = await businessForm.trigger();
     if (!valid) return;
     if (editingBusiness) {
       await updateBusiness.mutateAsync({ id: editingBusiness.id, payload: data });
     } else {
       await createBusiness.mutateAsync(data);
     }
   };
   ```

**O que eu preciso**

1. Identificar por que o clique em “Próximo” na etapa 2 está disparando `handleBusinessSubmit` e fechando o modal.
2. Propor correções precisas no código (pequenas mudanças em JSX ou lógica) para que apenas o botão de submit na etapa 3 acione a mutação.
3. Se necessário, ajustar o comportamento do Radix Dialog para não interferir na etapa atual antes do envio.
4. Fornecer um diff ou trecho de código corrigido e uma breve explicação de cada alteração.

**Requisitos**

* Focar em React, JSX e React Hook Form.
* Mostrar exatamente quais linhas editar e qual atributo ou lógica incluir/remover.
* Garantir que o fluxo de etapas funcione de forma isolada até o submit final.

Obrigado pela ajuda!
